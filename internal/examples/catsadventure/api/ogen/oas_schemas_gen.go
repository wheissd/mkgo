// Code generated by ogen, DO NOT EDIT.

package ogen

import (
	"fmt"
	"time"

	"github.com/google/uuid"
)

func (s *ErrorStatusCode) Error() string {
	return fmt.Sprintf("code %d: %+v", s.StatusCode, s.Response)
}

// Ref: #/components/schemas/Breed
type Breed struct {
	CreateTime  time.Time   `json:"create_time"`
	DeletedTime OptDateTime `json:"deleted_time"`
	Edges       BreedEdges  `json:"edges"`
	ID          uuid.UUID   `json:"id"`
	Name        string      `json:"name"`
	UpdateTime  time.Time   `json:"update_time"`
}

// GetCreateTime returns the value of CreateTime.
func (s *Breed) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetDeletedTime returns the value of DeletedTime.
func (s *Breed) GetDeletedTime() OptDateTime {
	return s.DeletedTime
}

// GetEdges returns the value of Edges.
func (s *Breed) GetEdges() BreedEdges {
	return s.Edges
}

// GetID returns the value of ID.
func (s *Breed) GetID() uuid.UUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *Breed) GetName() string {
	return s.Name
}

// GetUpdateTime returns the value of UpdateTime.
func (s *Breed) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// SetCreateTime sets the value of CreateTime.
func (s *Breed) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetDeletedTime sets the value of DeletedTime.
func (s *Breed) SetDeletedTime(val OptDateTime) {
	s.DeletedTime = val
}

// SetEdges sets the value of Edges.
func (s *Breed) SetEdges(val BreedEdges) {
	s.Edges = val
}

// SetID sets the value of ID.
func (s *Breed) SetID(val uuid.UUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *Breed) SetName(val string) {
	s.Name = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *Breed) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

func (*Breed) createBreedRes() {}
func (*Breed) readBreedRes()   {}
func (*Breed) updateBreedRes() {}

type BreedEdges struct {
	Cats []Cat `json:"cats"`
}

// GetCats returns the value of Cats.
func (s *BreedEdges) GetCats() []Cat {
	return s.Cats
}

// SetCats sets the value of Cats.
func (s *BreedEdges) SetCats(val []Cat) {
	s.Cats = val
}

type BreedList []Breed

// BreedListHeaders wraps BreedList with response headers.
type BreedListHeaders struct {
	ContentRange int
	Response     BreedList
}

// GetContentRange returns the value of ContentRange.
func (s *BreedListHeaders) GetContentRange() int {
	return s.ContentRange
}

// GetResponse returns the value of Response.
func (s *BreedListHeaders) GetResponse() BreedList {
	return s.Response
}

// SetContentRange sets the value of ContentRange.
func (s *BreedListHeaders) SetContentRange(val int) {
	s.ContentRange = val
}

// SetResponse sets the value of Response.
func (s *BreedListHeaders) SetResponse(val BreedList) {
	s.Response = val
}

func (*BreedListHeaders) listBreedRes() {}

// Ref: #/components/schemas/Cat
type Cat struct {
	PhantomField OptString   `json:"PhantomField"`
	BreedID      uuid.UUID   `json:"breed_id"`
	CreateTime   time.Time   `json:"create_time"`
	DateFrom     time.Time   `json:"date_from"`
	DeletedTime  OptDateTime `json:"deleted_time"`
	Edges        CatEdges    `json:"edges"`
	ID           uuid.UUID   `json:"id"`
	Name         string      `json:"name"`
	OtherType    string      `json:"other_type"`
	Speed        int64       `json:"speed"`
	Type         string      `json:"type"`
	UpdateTime   time.Time   `json:"update_time"`
}

// GetPhantomField returns the value of PhantomField.
func (s *Cat) GetPhantomField() OptString {
	return s.PhantomField
}

// GetBreedID returns the value of BreedID.
func (s *Cat) GetBreedID() uuid.UUID {
	return s.BreedID
}

// GetCreateTime returns the value of CreateTime.
func (s *Cat) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetDateFrom returns the value of DateFrom.
func (s *Cat) GetDateFrom() time.Time {
	return s.DateFrom
}

// GetDeletedTime returns the value of DeletedTime.
func (s *Cat) GetDeletedTime() OptDateTime {
	return s.DeletedTime
}

// GetEdges returns the value of Edges.
func (s *Cat) GetEdges() CatEdges {
	return s.Edges
}

// GetID returns the value of ID.
func (s *Cat) GetID() uuid.UUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *Cat) GetName() string {
	return s.Name
}

// GetOtherType returns the value of OtherType.
func (s *Cat) GetOtherType() string {
	return s.OtherType
}

// GetSpeed returns the value of Speed.
func (s *Cat) GetSpeed() int64 {
	return s.Speed
}

// GetType returns the value of Type.
func (s *Cat) GetType() string {
	return s.Type
}

// GetUpdateTime returns the value of UpdateTime.
func (s *Cat) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// SetPhantomField sets the value of PhantomField.
func (s *Cat) SetPhantomField(val OptString) {
	s.PhantomField = val
}

// SetBreedID sets the value of BreedID.
func (s *Cat) SetBreedID(val uuid.UUID) {
	s.BreedID = val
}

// SetCreateTime sets the value of CreateTime.
func (s *Cat) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetDateFrom sets the value of DateFrom.
func (s *Cat) SetDateFrom(val time.Time) {
	s.DateFrom = val
}

// SetDeletedTime sets the value of DeletedTime.
func (s *Cat) SetDeletedTime(val OptDateTime) {
	s.DeletedTime = val
}

// SetEdges sets the value of Edges.
func (s *Cat) SetEdges(val CatEdges) {
	s.Edges = val
}

// SetID sets the value of ID.
func (s *Cat) SetID(val uuid.UUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *Cat) SetName(val string) {
	s.Name = val
}

// SetOtherType sets the value of OtherType.
func (s *Cat) SetOtherType(val string) {
	s.OtherType = val
}

// SetSpeed sets the value of Speed.
func (s *Cat) SetSpeed(val int64) {
	s.Speed = val
}

// SetType sets the value of Type.
func (s *Cat) SetType(val string) {
	s.Type = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *Cat) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

func (*Cat) createCatRes() {}
func (*Cat) readCatRes()   {}
func (*Cat) updateCatRes() {}

type CatEdges struct {
	Breed   OptBreed `json:"breed"`
	Kittens []Kitten `json:"kittens"`
}

// GetBreed returns the value of Breed.
func (s *CatEdges) GetBreed() OptBreed {
	return s.Breed
}

// GetKittens returns the value of Kittens.
func (s *CatEdges) GetKittens() []Kitten {
	return s.Kittens
}

// SetBreed sets the value of Breed.
func (s *CatEdges) SetBreed(val OptBreed) {
	s.Breed = val
}

// SetKittens sets the value of Kittens.
func (s *CatEdges) SetKittens(val []Kitten) {
	s.Kittens = val
}

type CatList []Cat

// CatListHeaders wraps CatList with response headers.
type CatListHeaders struct {
	ContentRange int
	Response     CatList
}

// GetContentRange returns the value of ContentRange.
func (s *CatListHeaders) GetContentRange() int {
	return s.ContentRange
}

// GetResponse returns the value of Response.
func (s *CatListHeaders) GetResponse() CatList {
	return s.Response
}

// SetContentRange sets the value of ContentRange.
func (s *CatListHeaders) SetContentRange(val int) {
	s.ContentRange = val
}

// SetResponse sets the value of Response.
func (s *CatListHeaders) SetResponse(val CatList) {
	s.Response = val
}

func (*CatListHeaders) listCatRes() {}

// Ref: #/components/schemas/CreateBreed
type CreateBreed struct {
	CreateTime  time.Time           `json:"create_time"`
	DeletedTime OptDateTime         `json:"deleted_time"`
	Edges       OptCreateBreedEdges `json:"edges"`
	ID          uuid.UUID           `json:"id"`
	Name        string              `json:"name"`
	UpdateTime  time.Time           `json:"update_time"`
}

// GetCreateTime returns the value of CreateTime.
func (s *CreateBreed) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetDeletedTime returns the value of DeletedTime.
func (s *CreateBreed) GetDeletedTime() OptDateTime {
	return s.DeletedTime
}

// GetEdges returns the value of Edges.
func (s *CreateBreed) GetEdges() OptCreateBreedEdges {
	return s.Edges
}

// GetID returns the value of ID.
func (s *CreateBreed) GetID() uuid.UUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *CreateBreed) GetName() string {
	return s.Name
}

// GetUpdateTime returns the value of UpdateTime.
func (s *CreateBreed) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// SetCreateTime sets the value of CreateTime.
func (s *CreateBreed) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetDeletedTime sets the value of DeletedTime.
func (s *CreateBreed) SetDeletedTime(val OptDateTime) {
	s.DeletedTime = val
}

// SetEdges sets the value of Edges.
func (s *CreateBreed) SetEdges(val OptCreateBreedEdges) {
	s.Edges = val
}

// SetID sets the value of ID.
func (s *CreateBreed) SetID(val uuid.UUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *CreateBreed) SetName(val string) {
	s.Name = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *CreateBreed) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

type CreateBreedEdges struct {
	Cats []CreateCat `json:"cats"`
}

// GetCats returns the value of Cats.
func (s *CreateBreedEdges) GetCats() []CreateCat {
	return s.Cats
}

// SetCats sets the value of Cats.
func (s *CreateBreedEdges) SetCats(val []CreateCat) {
	s.Cats = val
}

// Ref: #/components/schemas/CreateCat
type CreateCat struct {
	PhantomField OptString         `json:"PhantomField"`
	BreedID      uuid.UUID         `json:"breed_id"`
	CreateTime   time.Time         `json:"create_time"`
	DateFrom     time.Time         `json:"date_from"`
	DeletedTime  OptDateTime       `json:"deleted_time"`
	Edges        OptCreateCatEdges `json:"edges"`
	ID           uuid.UUID         `json:"id"`
	Name         string            `json:"name"`
	OtherType    string            `json:"other_type"`
	Speed        int64             `json:"speed"`
	Type         string            `json:"type"`
	UpdateTime   time.Time         `json:"update_time"`
}

// GetPhantomField returns the value of PhantomField.
func (s *CreateCat) GetPhantomField() OptString {
	return s.PhantomField
}

// GetBreedID returns the value of BreedID.
func (s *CreateCat) GetBreedID() uuid.UUID {
	return s.BreedID
}

// GetCreateTime returns the value of CreateTime.
func (s *CreateCat) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetDateFrom returns the value of DateFrom.
func (s *CreateCat) GetDateFrom() time.Time {
	return s.DateFrom
}

// GetDeletedTime returns the value of DeletedTime.
func (s *CreateCat) GetDeletedTime() OptDateTime {
	return s.DeletedTime
}

// GetEdges returns the value of Edges.
func (s *CreateCat) GetEdges() OptCreateCatEdges {
	return s.Edges
}

// GetID returns the value of ID.
func (s *CreateCat) GetID() uuid.UUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *CreateCat) GetName() string {
	return s.Name
}

// GetOtherType returns the value of OtherType.
func (s *CreateCat) GetOtherType() string {
	return s.OtherType
}

// GetSpeed returns the value of Speed.
func (s *CreateCat) GetSpeed() int64 {
	return s.Speed
}

// GetType returns the value of Type.
func (s *CreateCat) GetType() string {
	return s.Type
}

// GetUpdateTime returns the value of UpdateTime.
func (s *CreateCat) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// SetPhantomField sets the value of PhantomField.
func (s *CreateCat) SetPhantomField(val OptString) {
	s.PhantomField = val
}

// SetBreedID sets the value of BreedID.
func (s *CreateCat) SetBreedID(val uuid.UUID) {
	s.BreedID = val
}

// SetCreateTime sets the value of CreateTime.
func (s *CreateCat) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetDateFrom sets the value of DateFrom.
func (s *CreateCat) SetDateFrom(val time.Time) {
	s.DateFrom = val
}

// SetDeletedTime sets the value of DeletedTime.
func (s *CreateCat) SetDeletedTime(val OptDateTime) {
	s.DeletedTime = val
}

// SetEdges sets the value of Edges.
func (s *CreateCat) SetEdges(val OptCreateCatEdges) {
	s.Edges = val
}

// SetID sets the value of ID.
func (s *CreateCat) SetID(val uuid.UUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *CreateCat) SetName(val string) {
	s.Name = val
}

// SetOtherType sets the value of OtherType.
func (s *CreateCat) SetOtherType(val string) {
	s.OtherType = val
}

// SetSpeed sets the value of Speed.
func (s *CreateCat) SetSpeed(val int64) {
	s.Speed = val
}

// SetType sets the value of Type.
func (s *CreateCat) SetType(val string) {
	s.Type = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *CreateCat) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

type CreateCatEdges struct {
	Breed   OptCreateBreed `json:"breed"`
	Kittens []CreateKitten `json:"kittens"`
}

// GetBreed returns the value of Breed.
func (s *CreateCatEdges) GetBreed() OptCreateBreed {
	return s.Breed
}

// GetKittens returns the value of Kittens.
func (s *CreateCatEdges) GetKittens() []CreateKitten {
	return s.Kittens
}

// SetBreed sets the value of Breed.
func (s *CreateCatEdges) SetBreed(val OptCreateBreed) {
	s.Breed = val
}

// SetKittens sets the value of Kittens.
func (s *CreateCatEdges) SetKittens(val []CreateKitten) {
	s.Kittens = val
}

// Ref: #/components/schemas/CreateFatherCat
type CreateFatherCat struct {
	CreateTime  time.Time   `json:"create_time"`
	DeletedTime OptDateTime `json:"deleted_time"`
	ID          uuid.UUID   `json:"id"`
	Name        string      `json:"name"`
	UpdateTime  time.Time   `json:"update_time"`
}

// GetCreateTime returns the value of CreateTime.
func (s *CreateFatherCat) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetDeletedTime returns the value of DeletedTime.
func (s *CreateFatherCat) GetDeletedTime() OptDateTime {
	return s.DeletedTime
}

// GetID returns the value of ID.
func (s *CreateFatherCat) GetID() uuid.UUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *CreateFatherCat) GetName() string {
	return s.Name
}

// GetUpdateTime returns the value of UpdateTime.
func (s *CreateFatherCat) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// SetCreateTime sets the value of CreateTime.
func (s *CreateFatherCat) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetDeletedTime sets the value of DeletedTime.
func (s *CreateFatherCat) SetDeletedTime(val OptDateTime) {
	s.DeletedTime = val
}

// SetID sets the value of ID.
func (s *CreateFatherCat) SetID(val uuid.UUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *CreateFatherCat) SetName(val string) {
	s.Name = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *CreateFatherCat) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// Ref: #/components/schemas/CreateKitten
type CreateKitten struct {
	CreateTime  time.Time            `json:"create_time"`
	DeletedTime OptDateTime          `json:"deleted_time"`
	Edges       OptCreateKittenEdges `json:"edges"`
	ID          uuid.UUID            `json:"id"`
	MotherID    uuid.UUID            `json:"mother_id"`
	Name        string               `json:"name"`
	UpdateTime  time.Time            `json:"update_time"`
}

// GetCreateTime returns the value of CreateTime.
func (s *CreateKitten) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetDeletedTime returns the value of DeletedTime.
func (s *CreateKitten) GetDeletedTime() OptDateTime {
	return s.DeletedTime
}

// GetEdges returns the value of Edges.
func (s *CreateKitten) GetEdges() OptCreateKittenEdges {
	return s.Edges
}

// GetID returns the value of ID.
func (s *CreateKitten) GetID() uuid.UUID {
	return s.ID
}

// GetMotherID returns the value of MotherID.
func (s *CreateKitten) GetMotherID() uuid.UUID {
	return s.MotherID
}

// GetName returns the value of Name.
func (s *CreateKitten) GetName() string {
	return s.Name
}

// GetUpdateTime returns the value of UpdateTime.
func (s *CreateKitten) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// SetCreateTime sets the value of CreateTime.
func (s *CreateKitten) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetDeletedTime sets the value of DeletedTime.
func (s *CreateKitten) SetDeletedTime(val OptDateTime) {
	s.DeletedTime = val
}

// SetEdges sets the value of Edges.
func (s *CreateKitten) SetEdges(val OptCreateKittenEdges) {
	s.Edges = val
}

// SetID sets the value of ID.
func (s *CreateKitten) SetID(val uuid.UUID) {
	s.ID = val
}

// SetMotherID sets the value of MotherID.
func (s *CreateKitten) SetMotherID(val uuid.UUID) {
	s.MotherID = val
}

// SetName sets the value of Name.
func (s *CreateKitten) SetName(val string) {
	s.Name = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *CreateKitten) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

type CreateKittenEdges struct {
	Mother OptCreateCat `json:"mother"`
}

// GetMother returns the value of Mother.
func (s *CreateKittenEdges) GetMother() OptCreateCat {
	return s.Mother
}

// SetMother sets the value of Mother.
func (s *CreateKittenEdges) SetMother(val OptCreateCat) {
	s.Mother = val
}

type DeleteBreedOK struct {
	Status OptString `json:"status"`
}

// GetStatus returns the value of Status.
func (s *DeleteBreedOK) GetStatus() OptString {
	return s.Status
}

// SetStatus sets the value of Status.
func (s *DeleteBreedOK) SetStatus(val OptString) {
	s.Status = val
}

func (*DeleteBreedOK) deleteBreedRes() {}

type DeleteCatOK struct {
	Status OptString `json:"status"`
}

// GetStatus returns the value of Status.
func (s *DeleteCatOK) GetStatus() OptString {
	return s.Status
}

// SetStatus sets the value of Status.
func (s *DeleteCatOK) SetStatus(val OptString) {
	s.Status = val
}

func (*DeleteCatOK) deleteCatRes() {}

type DeleteFatherCatOK struct {
	Status OptString `json:"status"`
}

// GetStatus returns the value of Status.
func (s *DeleteFatherCatOK) GetStatus() OptString {
	return s.Status
}

// SetStatus sets the value of Status.
func (s *DeleteFatherCatOK) SetStatus(val OptString) {
	s.Status = val
}

func (*DeleteFatherCatOK) deleteFatherCatRes() {}

type DeleteKittenOK struct {
	Status OptString `json:"status"`
}

// GetStatus returns the value of Status.
func (s *DeleteKittenOK) GetStatus() OptString {
	return s.Status
}

// SetStatus sets the value of Status.
func (s *DeleteKittenOK) SetStatus(val OptString) {
	s.Status = val
}

func (*DeleteKittenOK) deleteKittenRes() {}

type ErrorItem struct {
	Code    int    `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *ErrorItem) GetCode() int {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *ErrorItem) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *ErrorItem) SetCode(val int) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *ErrorItem) SetMessage(val string) {
	s.Message = val
}

// ErrorStatusCode wraps []ErrorItem with StatusCode.
type ErrorStatusCode struct {
	StatusCode int
	Response   []ErrorItem
}

// GetStatusCode returns the value of StatusCode.
func (s *ErrorStatusCode) GetStatusCode() int {
	return s.StatusCode
}

// GetResponse returns the value of Response.
func (s *ErrorStatusCode) GetResponse() []ErrorItem {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *ErrorStatusCode) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetResponse sets the value of Response.
func (s *ErrorStatusCode) SetResponse(val []ErrorItem) {
	s.Response = val
}

// Ref: #/components/schemas/FatherCat
type FatherCat struct {
	CreateTime  time.Time   `json:"create_time"`
	DeletedTime OptDateTime `json:"deleted_time"`
	ID          uuid.UUID   `json:"id"`
	Name        string      `json:"name"`
	UpdateTime  time.Time   `json:"update_time"`
}

// GetCreateTime returns the value of CreateTime.
func (s *FatherCat) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetDeletedTime returns the value of DeletedTime.
func (s *FatherCat) GetDeletedTime() OptDateTime {
	return s.DeletedTime
}

// GetID returns the value of ID.
func (s *FatherCat) GetID() uuid.UUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *FatherCat) GetName() string {
	return s.Name
}

// GetUpdateTime returns the value of UpdateTime.
func (s *FatherCat) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// SetCreateTime sets the value of CreateTime.
func (s *FatherCat) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetDeletedTime sets the value of DeletedTime.
func (s *FatherCat) SetDeletedTime(val OptDateTime) {
	s.DeletedTime = val
}

// SetID sets the value of ID.
func (s *FatherCat) SetID(val uuid.UUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *FatherCat) SetName(val string) {
	s.Name = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *FatherCat) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

func (*FatherCat) createFatherCatRes() {}
func (*FatherCat) readFatherCatRes()   {}
func (*FatherCat) updateFatherCatRes() {}

type FatherCatList []FatherCat

// FatherCatListHeaders wraps FatherCatList with response headers.
type FatherCatListHeaders struct {
	ContentRange int
	Response     FatherCatList
}

// GetContentRange returns the value of ContentRange.
func (s *FatherCatListHeaders) GetContentRange() int {
	return s.ContentRange
}

// GetResponse returns the value of Response.
func (s *FatherCatListHeaders) GetResponse() FatherCatList {
	return s.Response
}

// SetContentRange sets the value of ContentRange.
func (s *FatherCatListHeaders) SetContentRange(val int) {
	s.ContentRange = val
}

// SetResponse sets the value of Response.
func (s *FatherCatListHeaders) SetResponse(val FatherCatList) {
	s.Response = val
}

func (*FatherCatListHeaders) listFatherCatRes() {}

// Ref: #/components/schemas/Kitten
type Kitten struct {
	CreateTime  time.Time   `json:"create_time"`
	DeletedTime OptDateTime `json:"deleted_time"`
	Edges       KittenEdges `json:"edges"`
	ID          uuid.UUID   `json:"id"`
	MotherID    uuid.UUID   `json:"mother_id"`
	Name        string      `json:"name"`
	UpdateTime  time.Time   `json:"update_time"`
}

// GetCreateTime returns the value of CreateTime.
func (s *Kitten) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetDeletedTime returns the value of DeletedTime.
func (s *Kitten) GetDeletedTime() OptDateTime {
	return s.DeletedTime
}

// GetEdges returns the value of Edges.
func (s *Kitten) GetEdges() KittenEdges {
	return s.Edges
}

// GetID returns the value of ID.
func (s *Kitten) GetID() uuid.UUID {
	return s.ID
}

// GetMotherID returns the value of MotherID.
func (s *Kitten) GetMotherID() uuid.UUID {
	return s.MotherID
}

// GetName returns the value of Name.
func (s *Kitten) GetName() string {
	return s.Name
}

// GetUpdateTime returns the value of UpdateTime.
func (s *Kitten) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// SetCreateTime sets the value of CreateTime.
func (s *Kitten) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetDeletedTime sets the value of DeletedTime.
func (s *Kitten) SetDeletedTime(val OptDateTime) {
	s.DeletedTime = val
}

// SetEdges sets the value of Edges.
func (s *Kitten) SetEdges(val KittenEdges) {
	s.Edges = val
}

// SetID sets the value of ID.
func (s *Kitten) SetID(val uuid.UUID) {
	s.ID = val
}

// SetMotherID sets the value of MotherID.
func (s *Kitten) SetMotherID(val uuid.UUID) {
	s.MotherID = val
}

// SetName sets the value of Name.
func (s *Kitten) SetName(val string) {
	s.Name = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *Kitten) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

func (*Kitten) createKittenRes() {}
func (*Kitten) readKittenRes()   {}
func (*Kitten) updateKittenRes() {}

type KittenEdges struct {
	Mother OptCat `json:"mother"`
}

// GetMother returns the value of Mother.
func (s *KittenEdges) GetMother() OptCat {
	return s.Mother
}

// SetMother sets the value of Mother.
func (s *KittenEdges) SetMother(val OptCat) {
	s.Mother = val
}

type KittenList []Kitten

// KittenListHeaders wraps KittenList with response headers.
type KittenListHeaders struct {
	ContentRange int
	Response     KittenList
}

// GetContentRange returns the value of ContentRange.
func (s *KittenListHeaders) GetContentRange() int {
	return s.ContentRange
}

// GetResponse returns the value of Response.
func (s *KittenListHeaders) GetResponse() KittenList {
	return s.Response
}

// SetContentRange sets the value of ContentRange.
func (s *KittenListHeaders) SetContentRange(val int) {
	s.ContentRange = val
}

// SetResponse sets the value of Response.
func (s *KittenListHeaders) SetResponse(val KittenList) {
	s.Response = val
}

func (*KittenListHeaders) listKittenRes() {}

type ListBreedBadRequestApplicationJSON []R400Item

func (*ListBreedBadRequestApplicationJSON) createBreedRes()     {}
func (*ListBreedBadRequestApplicationJSON) createCatRes()       {}
func (*ListBreedBadRequestApplicationJSON) createFatherCatRes() {}
func (*ListBreedBadRequestApplicationJSON) createKittenRes()    {}
func (*ListBreedBadRequestApplicationJSON) deleteBreedRes()     {}
func (*ListBreedBadRequestApplicationJSON) deleteCatRes()       {}
func (*ListBreedBadRequestApplicationJSON) deleteFatherCatRes() {}
func (*ListBreedBadRequestApplicationJSON) deleteKittenRes()    {}
func (*ListBreedBadRequestApplicationJSON) listBreedRes()       {}
func (*ListBreedBadRequestApplicationJSON) listCatRes()         {}
func (*ListBreedBadRequestApplicationJSON) listFatherCatRes()   {}
func (*ListBreedBadRequestApplicationJSON) listKittenRes()      {}
func (*ListBreedBadRequestApplicationJSON) readBreedRes()       {}
func (*ListBreedBadRequestApplicationJSON) readCatRes()         {}
func (*ListBreedBadRequestApplicationJSON) readFatherCatRes()   {}
func (*ListBreedBadRequestApplicationJSON) readKittenRes()      {}
func (*ListBreedBadRequestApplicationJSON) updateBreedRes()     {}
func (*ListBreedBadRequestApplicationJSON) updateCatRes()       {}
func (*ListBreedBadRequestApplicationJSON) updateFatherCatRes() {}
func (*ListBreedBadRequestApplicationJSON) updateKittenRes()    {}

type ListBreedConflictApplicationJSON []R409Item

func (*ListBreedConflictApplicationJSON) createBreedRes()     {}
func (*ListBreedConflictApplicationJSON) createCatRes()       {}
func (*ListBreedConflictApplicationJSON) createFatherCatRes() {}
func (*ListBreedConflictApplicationJSON) createKittenRes()    {}
func (*ListBreedConflictApplicationJSON) deleteBreedRes()     {}
func (*ListBreedConflictApplicationJSON) deleteCatRes()       {}
func (*ListBreedConflictApplicationJSON) deleteFatherCatRes() {}
func (*ListBreedConflictApplicationJSON) deleteKittenRes()    {}
func (*ListBreedConflictApplicationJSON) listBreedRes()       {}
func (*ListBreedConflictApplicationJSON) listCatRes()         {}
func (*ListBreedConflictApplicationJSON) listFatherCatRes()   {}
func (*ListBreedConflictApplicationJSON) listKittenRes()      {}
func (*ListBreedConflictApplicationJSON) readBreedRes()       {}
func (*ListBreedConflictApplicationJSON) readCatRes()         {}
func (*ListBreedConflictApplicationJSON) readFatherCatRes()   {}
func (*ListBreedConflictApplicationJSON) readKittenRes()      {}
func (*ListBreedConflictApplicationJSON) updateBreedRes()     {}
func (*ListBreedConflictApplicationJSON) updateCatRes()       {}
func (*ListBreedConflictApplicationJSON) updateFatherCatRes() {}
func (*ListBreedConflictApplicationJSON) updateKittenRes()    {}

type ListBreedInternalServerErrorApplicationJSON []R500Item

func (*ListBreedInternalServerErrorApplicationJSON) createBreedRes()     {}
func (*ListBreedInternalServerErrorApplicationJSON) createCatRes()       {}
func (*ListBreedInternalServerErrorApplicationJSON) createFatherCatRes() {}
func (*ListBreedInternalServerErrorApplicationJSON) createKittenRes()    {}
func (*ListBreedInternalServerErrorApplicationJSON) deleteBreedRes()     {}
func (*ListBreedInternalServerErrorApplicationJSON) deleteCatRes()       {}
func (*ListBreedInternalServerErrorApplicationJSON) deleteFatherCatRes() {}
func (*ListBreedInternalServerErrorApplicationJSON) deleteKittenRes()    {}
func (*ListBreedInternalServerErrorApplicationJSON) listBreedRes()       {}
func (*ListBreedInternalServerErrorApplicationJSON) listCatRes()         {}
func (*ListBreedInternalServerErrorApplicationJSON) listFatherCatRes()   {}
func (*ListBreedInternalServerErrorApplicationJSON) listKittenRes()      {}
func (*ListBreedInternalServerErrorApplicationJSON) readBreedRes()       {}
func (*ListBreedInternalServerErrorApplicationJSON) readCatRes()         {}
func (*ListBreedInternalServerErrorApplicationJSON) readFatherCatRes()   {}
func (*ListBreedInternalServerErrorApplicationJSON) readKittenRes()      {}
func (*ListBreedInternalServerErrorApplicationJSON) updateBreedRes()     {}
func (*ListBreedInternalServerErrorApplicationJSON) updateCatRes()       {}
func (*ListBreedInternalServerErrorApplicationJSON) updateFatherCatRes() {}
func (*ListBreedInternalServerErrorApplicationJSON) updateKittenRes()    {}

type ListBreedNotFoundApplicationJSON []R404Item

func (*ListBreedNotFoundApplicationJSON) createBreedRes()     {}
func (*ListBreedNotFoundApplicationJSON) createCatRes()       {}
func (*ListBreedNotFoundApplicationJSON) createFatherCatRes() {}
func (*ListBreedNotFoundApplicationJSON) createKittenRes()    {}
func (*ListBreedNotFoundApplicationJSON) deleteBreedRes()     {}
func (*ListBreedNotFoundApplicationJSON) deleteCatRes()       {}
func (*ListBreedNotFoundApplicationJSON) deleteFatherCatRes() {}
func (*ListBreedNotFoundApplicationJSON) deleteKittenRes()    {}
func (*ListBreedNotFoundApplicationJSON) listBreedRes()       {}
func (*ListBreedNotFoundApplicationJSON) listCatRes()         {}
func (*ListBreedNotFoundApplicationJSON) listFatherCatRes()   {}
func (*ListBreedNotFoundApplicationJSON) listKittenRes()      {}
func (*ListBreedNotFoundApplicationJSON) readBreedRes()       {}
func (*ListBreedNotFoundApplicationJSON) readCatRes()         {}
func (*ListBreedNotFoundApplicationJSON) readFatherCatRes()   {}
func (*ListBreedNotFoundApplicationJSON) readKittenRes()      {}
func (*ListBreedNotFoundApplicationJSON) updateBreedRes()     {}
func (*ListBreedNotFoundApplicationJSON) updateCatRes()       {}
func (*ListBreedNotFoundApplicationJSON) updateFatherCatRes() {}
func (*ListBreedNotFoundApplicationJSON) updateKittenRes()    {}

// NewOptBreed returns new OptBreed with value set to v.
func NewOptBreed(v Breed) OptBreed {
	return OptBreed{
		Value: v,
		Set:   true,
	}
}

// OptBreed is optional Breed.
type OptBreed struct {
	Value Breed
	Set   bool
}

// IsSet returns true if OptBreed was set.
func (o OptBreed) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBreed) Reset() {
	var v Breed
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBreed) SetTo(v Breed) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBreed) Get() (v Breed, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBreed) Or(d Breed) Breed {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCat returns new OptCat with value set to v.
func NewOptCat(v Cat) OptCat {
	return OptCat{
		Value: v,
		Set:   true,
	}
}

// OptCat is optional Cat.
type OptCat struct {
	Value Cat
	Set   bool
}

// IsSet returns true if OptCat was set.
func (o OptCat) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCat) Reset() {
	var v Cat
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCat) SetTo(v Cat) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCat) Get() (v Cat, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCat) Or(d Cat) Cat {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCreateBreed returns new OptCreateBreed with value set to v.
func NewOptCreateBreed(v CreateBreed) OptCreateBreed {
	return OptCreateBreed{
		Value: v,
		Set:   true,
	}
}

// OptCreateBreed is optional CreateBreed.
type OptCreateBreed struct {
	Value CreateBreed
	Set   bool
}

// IsSet returns true if OptCreateBreed was set.
func (o OptCreateBreed) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCreateBreed) Reset() {
	var v CreateBreed
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCreateBreed) SetTo(v CreateBreed) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCreateBreed) Get() (v CreateBreed, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCreateBreed) Or(d CreateBreed) CreateBreed {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCreateBreedEdges returns new OptCreateBreedEdges with value set to v.
func NewOptCreateBreedEdges(v CreateBreedEdges) OptCreateBreedEdges {
	return OptCreateBreedEdges{
		Value: v,
		Set:   true,
	}
}

// OptCreateBreedEdges is optional CreateBreedEdges.
type OptCreateBreedEdges struct {
	Value CreateBreedEdges
	Set   bool
}

// IsSet returns true if OptCreateBreedEdges was set.
func (o OptCreateBreedEdges) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCreateBreedEdges) Reset() {
	var v CreateBreedEdges
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCreateBreedEdges) SetTo(v CreateBreedEdges) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCreateBreedEdges) Get() (v CreateBreedEdges, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCreateBreedEdges) Or(d CreateBreedEdges) CreateBreedEdges {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCreateCat returns new OptCreateCat with value set to v.
func NewOptCreateCat(v CreateCat) OptCreateCat {
	return OptCreateCat{
		Value: v,
		Set:   true,
	}
}

// OptCreateCat is optional CreateCat.
type OptCreateCat struct {
	Value CreateCat
	Set   bool
}

// IsSet returns true if OptCreateCat was set.
func (o OptCreateCat) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCreateCat) Reset() {
	var v CreateCat
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCreateCat) SetTo(v CreateCat) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCreateCat) Get() (v CreateCat, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCreateCat) Or(d CreateCat) CreateCat {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCreateCatEdges returns new OptCreateCatEdges with value set to v.
func NewOptCreateCatEdges(v CreateCatEdges) OptCreateCatEdges {
	return OptCreateCatEdges{
		Value: v,
		Set:   true,
	}
}

// OptCreateCatEdges is optional CreateCatEdges.
type OptCreateCatEdges struct {
	Value CreateCatEdges
	Set   bool
}

// IsSet returns true if OptCreateCatEdges was set.
func (o OptCreateCatEdges) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCreateCatEdges) Reset() {
	var v CreateCatEdges
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCreateCatEdges) SetTo(v CreateCatEdges) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCreateCatEdges) Get() (v CreateCatEdges, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCreateCatEdges) Or(d CreateCatEdges) CreateCatEdges {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCreateKittenEdges returns new OptCreateKittenEdges with value set to v.
func NewOptCreateKittenEdges(v CreateKittenEdges) OptCreateKittenEdges {
	return OptCreateKittenEdges{
		Value: v,
		Set:   true,
	}
}

// OptCreateKittenEdges is optional CreateKittenEdges.
type OptCreateKittenEdges struct {
	Value CreateKittenEdges
	Set   bool
}

// IsSet returns true if OptCreateKittenEdges was set.
func (o OptCreateKittenEdges) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCreateKittenEdges) Reset() {
	var v CreateKittenEdges
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCreateKittenEdges) SetTo(v CreateKittenEdges) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCreateKittenEdges) Get() (v CreateKittenEdges, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCreateKittenEdges) Or(d CreateKittenEdges) CreateKittenEdges {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDate returns new OptDate with value set to v.
func NewOptDate(v time.Time) OptDate {
	return OptDate{
		Value: v,
		Set:   true,
	}
}

// OptDate is optional time.Time.
type OptDate struct {
	Value time.Time
	Set   bool
}

// IsSet returns true if OptDate was set.
func (o OptDate) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDate) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDate) SetTo(v time.Time) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDate) Get() (v time.Time, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDate) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDateTime returns new OptDateTime with value set to v.
func NewOptDateTime(v time.Time) OptDateTime {
	return OptDateTime{
		Value: v,
		Set:   true,
	}
}

// OptDateTime is optional time.Time.
type OptDateTime struct {
	Value time.Time
	Set   bool
}

// IsSet returns true if OptDateTime was set.
func (o OptDateTime) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDateTime) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDateTime) SetTo(v time.Time) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDateTime) Get() (v time.Time, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDateTime) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt64 returns new OptInt64 with value set to v.
func NewOptInt64(v int64) OptInt64 {
	return OptInt64{
		Value: v,
		Set:   true,
	}
}

// OptInt64 is optional int64.
type OptInt64 struct {
	Value int64
	Set   bool
}

// IsSet returns true if OptInt64 was set.
func (o OptInt64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt64) Reset() {
	var v int64
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt64) SetTo(v int64) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt64) Get() (v int64, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt64) Or(d int64) int64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUUID returns new OptUUID with value set to v.
func NewOptUUID(v uuid.UUID) OptUUID {
	return OptUUID{
		Value: v,
		Set:   true,
	}
}

// OptUUID is optional uuid.UUID.
type OptUUID struct {
	Value uuid.UUID
	Set   bool
}

// IsSet returns true if OptUUID was set.
func (o OptUUID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUUID) Reset() {
	var v uuid.UUID
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUUID) SetTo(v uuid.UUID) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUUID) Get() (v uuid.UUID, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUUID) Or(d uuid.UUID) uuid.UUID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

type R400Item struct {
	Code    int    `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *R400Item) GetCode() int {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *R400Item) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *R400Item) SetCode(val int) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *R400Item) SetMessage(val string) {
	s.Message = val
}

type R404Item struct {
	Code    int    `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *R404Item) GetCode() int {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *R404Item) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *R404Item) SetCode(val int) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *R404Item) SetMessage(val string) {
	s.Message = val
}

type R409Item struct {
	Code    int    `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *R409Item) GetCode() int {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *R409Item) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *R409Item) SetCode(val int) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *R409Item) SetMessage(val string) {
	s.Message = val
}

type R500Item struct {
	Code    int    `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *R500Item) GetCode() int {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *R500Item) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *R500Item) SetCode(val int) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *R500Item) SetMessage(val string) {
	s.Message = val
}

// Ref: #/components/schemas/UpdateBreed
type UpdateBreed struct {
	CreateTime  OptDateTime `json:"create_time"`
	DeletedTime OptDateTime `json:"deleted_time"`
	EdgesDelete OptUUID     `json:"edges_delete"`
	ID          OptUUID     `json:"id"`
	Name        OptString   `json:"name"`
	UpdateTime  OptDateTime `json:"update_time"`
}

// GetCreateTime returns the value of CreateTime.
func (s *UpdateBreed) GetCreateTime() OptDateTime {
	return s.CreateTime
}

// GetDeletedTime returns the value of DeletedTime.
func (s *UpdateBreed) GetDeletedTime() OptDateTime {
	return s.DeletedTime
}

// GetEdgesDelete returns the value of EdgesDelete.
func (s *UpdateBreed) GetEdgesDelete() OptUUID {
	return s.EdgesDelete
}

// GetID returns the value of ID.
func (s *UpdateBreed) GetID() OptUUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *UpdateBreed) GetName() OptString {
	return s.Name
}

// GetUpdateTime returns the value of UpdateTime.
func (s *UpdateBreed) GetUpdateTime() OptDateTime {
	return s.UpdateTime
}

// SetCreateTime sets the value of CreateTime.
func (s *UpdateBreed) SetCreateTime(val OptDateTime) {
	s.CreateTime = val
}

// SetDeletedTime sets the value of DeletedTime.
func (s *UpdateBreed) SetDeletedTime(val OptDateTime) {
	s.DeletedTime = val
}

// SetEdgesDelete sets the value of EdgesDelete.
func (s *UpdateBreed) SetEdgesDelete(val OptUUID) {
	s.EdgesDelete = val
}

// SetID sets the value of ID.
func (s *UpdateBreed) SetID(val OptUUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *UpdateBreed) SetName(val OptString) {
	s.Name = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *UpdateBreed) SetUpdateTime(val OptDateTime) {
	s.UpdateTime = val
}

// Ref: #/components/schemas/UpdateCat
type UpdateCat struct {
	PhantomField OptString   `json:"PhantomField"`
	BreedID      OptUUID     `json:"breed_id"`
	CreateTime   OptDateTime `json:"create_time"`
	DateFrom     OptDate     `json:"date_from"`
	DeletedTime  OptDateTime `json:"deleted_time"`
	EdgesDelete  OptUUID     `json:"edges_delete"`
	ID           OptUUID     `json:"id"`
	Name         OptString   `json:"name"`
	OtherType    OptString   `json:"other_type"`
	Speed        OptInt64    `json:"speed"`
	Type         OptString   `json:"type"`
	UpdateTime   OptDateTime `json:"update_time"`
}

// GetPhantomField returns the value of PhantomField.
func (s *UpdateCat) GetPhantomField() OptString {
	return s.PhantomField
}

// GetBreedID returns the value of BreedID.
func (s *UpdateCat) GetBreedID() OptUUID {
	return s.BreedID
}

// GetCreateTime returns the value of CreateTime.
func (s *UpdateCat) GetCreateTime() OptDateTime {
	return s.CreateTime
}

// GetDateFrom returns the value of DateFrom.
func (s *UpdateCat) GetDateFrom() OptDate {
	return s.DateFrom
}

// GetDeletedTime returns the value of DeletedTime.
func (s *UpdateCat) GetDeletedTime() OptDateTime {
	return s.DeletedTime
}

// GetEdgesDelete returns the value of EdgesDelete.
func (s *UpdateCat) GetEdgesDelete() OptUUID {
	return s.EdgesDelete
}

// GetID returns the value of ID.
func (s *UpdateCat) GetID() OptUUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *UpdateCat) GetName() OptString {
	return s.Name
}

// GetOtherType returns the value of OtherType.
func (s *UpdateCat) GetOtherType() OptString {
	return s.OtherType
}

// GetSpeed returns the value of Speed.
func (s *UpdateCat) GetSpeed() OptInt64 {
	return s.Speed
}

// GetType returns the value of Type.
func (s *UpdateCat) GetType() OptString {
	return s.Type
}

// GetUpdateTime returns the value of UpdateTime.
func (s *UpdateCat) GetUpdateTime() OptDateTime {
	return s.UpdateTime
}

// SetPhantomField sets the value of PhantomField.
func (s *UpdateCat) SetPhantomField(val OptString) {
	s.PhantomField = val
}

// SetBreedID sets the value of BreedID.
func (s *UpdateCat) SetBreedID(val OptUUID) {
	s.BreedID = val
}

// SetCreateTime sets the value of CreateTime.
func (s *UpdateCat) SetCreateTime(val OptDateTime) {
	s.CreateTime = val
}

// SetDateFrom sets the value of DateFrom.
func (s *UpdateCat) SetDateFrom(val OptDate) {
	s.DateFrom = val
}

// SetDeletedTime sets the value of DeletedTime.
func (s *UpdateCat) SetDeletedTime(val OptDateTime) {
	s.DeletedTime = val
}

// SetEdgesDelete sets the value of EdgesDelete.
func (s *UpdateCat) SetEdgesDelete(val OptUUID) {
	s.EdgesDelete = val
}

// SetID sets the value of ID.
func (s *UpdateCat) SetID(val OptUUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *UpdateCat) SetName(val OptString) {
	s.Name = val
}

// SetOtherType sets the value of OtherType.
func (s *UpdateCat) SetOtherType(val OptString) {
	s.OtherType = val
}

// SetSpeed sets the value of Speed.
func (s *UpdateCat) SetSpeed(val OptInt64) {
	s.Speed = val
}

// SetType sets the value of Type.
func (s *UpdateCat) SetType(val OptString) {
	s.Type = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *UpdateCat) SetUpdateTime(val OptDateTime) {
	s.UpdateTime = val
}

// Ref: #/components/schemas/UpdateFatherCat
type UpdateFatherCat struct {
	CreateTime  OptDateTime `json:"create_time"`
	DeletedTime OptDateTime `json:"deleted_time"`
	ID          OptUUID     `json:"id"`
	Name        OptString   `json:"name"`
	UpdateTime  OptDateTime `json:"update_time"`
}

// GetCreateTime returns the value of CreateTime.
func (s *UpdateFatherCat) GetCreateTime() OptDateTime {
	return s.CreateTime
}

// GetDeletedTime returns the value of DeletedTime.
func (s *UpdateFatherCat) GetDeletedTime() OptDateTime {
	return s.DeletedTime
}

// GetID returns the value of ID.
func (s *UpdateFatherCat) GetID() OptUUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *UpdateFatherCat) GetName() OptString {
	return s.Name
}

// GetUpdateTime returns the value of UpdateTime.
func (s *UpdateFatherCat) GetUpdateTime() OptDateTime {
	return s.UpdateTime
}

// SetCreateTime sets the value of CreateTime.
func (s *UpdateFatherCat) SetCreateTime(val OptDateTime) {
	s.CreateTime = val
}

// SetDeletedTime sets the value of DeletedTime.
func (s *UpdateFatherCat) SetDeletedTime(val OptDateTime) {
	s.DeletedTime = val
}

// SetID sets the value of ID.
func (s *UpdateFatherCat) SetID(val OptUUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *UpdateFatherCat) SetName(val OptString) {
	s.Name = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *UpdateFatherCat) SetUpdateTime(val OptDateTime) {
	s.UpdateTime = val
}

// Ref: #/components/schemas/UpdateKitten
type UpdateKitten struct {
	CreateTime  OptDateTime `json:"create_time"`
	DeletedTime OptDateTime `json:"deleted_time"`
	ID          OptUUID     `json:"id"`
	MotherID    OptUUID     `json:"mother_id"`
	Name        OptString   `json:"name"`
	UpdateTime  OptDateTime `json:"update_time"`
}

// GetCreateTime returns the value of CreateTime.
func (s *UpdateKitten) GetCreateTime() OptDateTime {
	return s.CreateTime
}

// GetDeletedTime returns the value of DeletedTime.
func (s *UpdateKitten) GetDeletedTime() OptDateTime {
	return s.DeletedTime
}

// GetID returns the value of ID.
func (s *UpdateKitten) GetID() OptUUID {
	return s.ID
}

// GetMotherID returns the value of MotherID.
func (s *UpdateKitten) GetMotherID() OptUUID {
	return s.MotherID
}

// GetName returns the value of Name.
func (s *UpdateKitten) GetName() OptString {
	return s.Name
}

// GetUpdateTime returns the value of UpdateTime.
func (s *UpdateKitten) GetUpdateTime() OptDateTime {
	return s.UpdateTime
}

// SetCreateTime sets the value of CreateTime.
func (s *UpdateKitten) SetCreateTime(val OptDateTime) {
	s.CreateTime = val
}

// SetDeletedTime sets the value of DeletedTime.
func (s *UpdateKitten) SetDeletedTime(val OptDateTime) {
	s.DeletedTime = val
}

// SetID sets the value of ID.
func (s *UpdateKitten) SetID(val OptUUID) {
	s.ID = val
}

// SetMotherID sets the value of MotherID.
func (s *UpdateKitten) SetMotherID(val OptUUID) {
	s.MotherID = val
}

// SetName sets the value of Name.
func (s *UpdateKitten) SetName(val OptString) {
	s.Name = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *UpdateKitten) SetUpdateTime(val OptDateTime) {
	s.UpdateTime = val
}
